#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <math.h>

int compcount = 0;

int deter0(int *a, int low, int high, int x);
int deter1(int *a, int low, int high, int x);
int deter2(int *a, int low, int high, int x);
int deterlgn(int *a, int low, int high, int x);

int main()
{
    int i;
    FILE *fdeter0, *fdeter1, *fdeter2, *fdeterlgn;
    
    fdeter0 = fopen("deter0.dat", "w");
    fdeter1 = fopen("deter1.dat", "w");
    fdeter2 = fopen("deter2.dat", "w");
    fdeterlgn = fopen("deterlgn.dat", "w");
    
    srand(time(NULL));
    for(i = 1000; i <= 1000000; i=i+1000){
        
        int *a;
        int j;
        int x, y;
        
        a = (int*) malloc(i * sizeof(int));
        
        
        for(j = 0; j < i; j++)
            a[j] = j+1;
        
        int c = rand() % (i);
        x = a[c];
        
        int d;
        
        double k = log2(i);
        int l = k;

        for(j = 1; j <= l; j++){
            d = rand() % (i);
            a[d] = x;
        }
        
        y = deter0(a, 0, i-1, x);
        fprintf(fdeter0, "(%d, %d), ", i, compcount);
        compcount = 0;
        
        y = deter1(a, 0, i-1, x);
        fprintf(fdeter1, "(%d, %d), ", i, compcount);
        compcount = 0;
        
        y = deter2(a, 0, i-1, x);
        fprintf(fdeter2, "(%d, %d), ", i, compcount);
        compcount = 0;
        
        y = deterlgn(a, 0, i-1, x);
        fprintf(fdeterlgn, "(%d, %d), ", i, compcount);
        compcount = 0;
        
    }

    fclose(fdeter0);
    fclose(fdeter1);
    fclose(fdeter2);
    fclose(fdeterlgn);
}

int deter0(int *a, int low, int high, int x) /* this is the deterministic algorithm */
{
    
    int i;
        for(i = low; i <= high; i++){
            compcount++;
            if(a[i] == x)
                return 1;
        }
        
        return 0;
}
int deter1(int *a, int low, int high, int x) /* this is Algorithm A.2 */
{
    
    if(high-low+1==1){
        compcount++;
        return (a[low] == x) ? 1 : 0;
    }
    
    int k, mid;
    
    k = rand() % 2;
    mid = (low+high)/2;
    
        if(k==0){
            if(deter0(a, low, mid, x))
                return 1;
            
            if(deter0(a, mid+1, high, x))
                return 1;
            
            return 0;
        }
        
        if(k==1){
            if(deter0(a, mid+1, high, x))
                return 1;
            
            if(deter0(a, low, mid, x))
                return 1;
            
            return 0;
        }
}
int deter2(int *a, int low, int high, int x) /* this is Algorithm A.3 */
{
    
    if(high-low+1==1){
        compcount++;
        return (a[low] == x) ? 1 : 0;
    }
    
    int k, mid;
    
    k = rand() % 2;
    mid = (low+high)/2;
    
        if(k==0){
            if(deter1(a, low, mid, x))
                return 1;
            
            if(deter1(a, mid+1, high, x))
                return 1;
            
            return 0;
        }
        
        if(k==1){
            if(deter1(a, mid+1, high, x))
                return 1;
            
            if(deter1(a, low, mid, x))
                return 1;
            
            return 0;
        }
}
int deterlgn(int *a, int low, int high, int x) /* this is Algorithm A.4 */
{
    
    if(high-low+1==1){
        compcount++;
        return (a[low] == x) ? 1 : 0;
    }
    
    int k, mid;
    
    k = rand() % 2;
    mid = (low+high)/2;
    
        if(k==0){
            if(deterlgn(a, low, mid, x))
                return 1;
            
            if(deterlgn(a, mid+1, high, x))
                return 1;
            
            return 0;
        }
        
        if(k==1){
            if(deterlgn(a, mid+1, high, x))
                return 1;
            
            if(deterlgn(a, low, mid, x))
                return 1;
            
            return 0;
        }
}
